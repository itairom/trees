{"version":3,"sources":["cmps/FormAutocomplete.jsx","services/httpService.js","services/storageService.js","serviceWorker.js","reducers/TreeReducer.js","services/userService.js","reducers/AppReducer.js","assets/svg/menu_black_24dp.svg","cmps/UserInfo.jsx","actions/appActions.js","cmps/AppHeader.jsx","pages/About.jsx","pages/CreateSurvey.jsx","pages/ChooseSurvey.jsx","pages/TreeUpdate.jsx","pages/Home.jsx","assets/svg/grid.svg","cmps/Login.jsx","cmps/Signup.jsx","App.js","index.js","cmps/form/input.jsx","actions/TreeActions.js","services/treeService.js","services/formService.js","services/customHooks.js","cmps/form/FormModal.jsx"],"names":["FormAutocomplete","forwardRef","ref","tree","onSetTreeType","options","useImperativeHandle","onResetAutocomplete","setTreeObj","setSearch","useState","display","setDisplay","search","treeObj","useEffect","label","className","onChange","ev","target","value","name","type","placeholder","autoComplete","onClick","filter","option","includes","map","v","i","treeset","key","axios","Axios","create","withCredentials","httpService","get","endpoint","data","ajax","post","put","delete","a","method","url","params","res","response","status","window","location","assign","storageService","loadFromStorage","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","filterBy","isDark","currentSurvey","isTreePreviewShowen","survey","userService","login","logout","signup","updateUser","getLoggedinUser","sessionStorage","getOnlineUsers","getUsers","getById","googleLogin","credentials","user","_saveLocalUser","tokenId","userInfo","clear","id","setItem","users","onlineUsers","reduce","acc","isOnline","push","_id","userId","workspace","loggedInUser","loginErr","currPopover","elPos","props","isOverlayOpen","_path","_path2","_excluded","_extends","Object","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","createElement","height","viewBox","width","fill","d","ForwardRef","UserInfo","isShowUserInfo","setIsShowUserInfo","useSelector","appModule","dispatch","useDispatch","username","href","to","src","alt","AppHeader","isMobile","setIsMobile","localSurveyId","setLocalSurveyId","TreeModule","headerRef","useRef","storageId","changeMobile","prev","surveyTitle","About","CreateSurvey","history","useHistory","surveyInfo","surveyDate","surveySummary","surveyTrees","surveyOwner","setSurvey","handleChange","checked","prevState","action","htmlFor","onSubmit","preventDefault","min","max","updateSurvey","ChooseSurvey","surveyIdList","setSurveyIdList","currentSurveyId","setCurrentSurveyId","handleOnClickNext","useCallback","handleOnClickBack","handleOnClickCreate","treeService","querySurveyIdList","resp","setCurrentSurvey","FormControl","InputLabel","required","Select","variant","color","MenuItem","TreeUpdate","useParams","childRef","setTree","setSurveyId","treeTypeOptions","setTreeTypeOptions","treeType","setType","query","onSetTree","storageSurveyId","querySurvey","findTree","find","treeId","formService","treeTypes","setInputRef","setTextAreaRef","isLessThenFiveInput","field","isEmptyInput","useForm","fieldValues","values","temp","errors","health","canopy","mobile","quantity","idx","diameter","rootsDiameter","movingPossibility","description","movingReason","recommendation","setErrors","every","x","handleInputChange","useHandleModal","isAddingTree","isModalShown","HandleIsModalShown","document","querySelectorAll","forEach","input","textarea","submitForm","copySurvey","treeIdx","findIndex","splice","onUpdateSurvey","goBack","dir","palmstreeTypes","setIsPalmTree","treeTypeObj","InputProps","inputProps","FormModal","HandleiIsModalShown","modal","isShowen","imgSrc","recomandationOptions","multiline","rows","Button","style","marginBottom","Home","_circle","_circle2","_circle3","_circle4","_circle5","_circle6","_circle7","_circle8","_circle9","Login","storageLocalUser","err","onLogin","validate","Yup","password","initialValues","validationSchema","component","autoFocus","Signup","fullname","onSignup","imgUrl","cx","cy","r","attributeName","begin","dur","calcMode","repeatCount","fillOpacity","SurveyEditor","lazy","FinalSurvey","App","fallback","path","rootReducer","combineReducers","popoverName","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","ready","unregister","reload","checkValidServiceWorker","Input","helperText","_setCurrentSurvey","_updateSurvey","_querySurvey","toggleIsTreePreviewShowen","save","surveyName","survyName","removedTree","idList","surveyId","trees","querySurveyTrees","removeTree","getTreeById","finalSurveyNote","initialFValues","validateOnChange","setValues","resetForm","cb","fields","setFields","prevFields","useWindowSize","isClient","getSize","innerWidth","undefined","innerHeight","windowSize","setWindowSize","handleResize","removeEventListener"],"mappings":"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","file":"static/js/main.44f22145.chunk.js","sourcesContent":["import React, { useEffect, useState, useImperativeHandle, forwardRef } from 'react'\n\nexport const FormAutocomplete = forwardRef(({ tree, onSetTreeType, options }, ref) => {\n    useImperativeHandle(\n        ref, () => ({\n            onResetAutocomplete() {\n                setTreeObj({})\n                setSearch('')\n            }\n        })\n    )\n    const [display, setDisplay] = useState(false)\n    const [search, setSearch] = useState('')\n    const [treeObj, setTreeObj] = useState({})\n    useEffect(() => {\n        if (tree) {\n            setTreeObj(tree)\n            setSearch(tree.label)\n            onSetTreeType(tree)\n        }\n    }, [tree])\n\n    useEffect(() => {\n        setDisplay(false)\n        onSetTreeType(treeObj)\n    }, [treeObj, onSetTreeType])\n\n\n\n    const setTree = (treeset) => {\n        setTreeObj(treeset)\n        setSearch(treeset.label)\n    }\n\n    return (\n        <section className=\"autocomplete-form\">\n            <input\n                onChange={(ev) => { setSearch(ev.target.value) }}\n                className=\"autocomplete-input\"\n                name=\"type\"\n                // value={tree ? tree.type : search}\n                value={search}\n                type=\"text\"\n                placeholder=\" מין העץ\"\n                autoComplete=\"off\"\n                onClick={() => { setDisplay(!display) }} />\n            {display &&\n                <div className=\"autocomplete-container\">\n                    {options.filter((option) => option?.label?.includes(search)).map((v, i) => {\n                        return (\n                            <div onClick={() => { setTree(v) }} className=\"tree-option\" key={v.label}>\n                                <span>{v.label}</span>\n                            </div>\n                        )\n                    })\n                    }\n                </div>\n            }\n        </section>\n    )\n})","import Axios from 'axios'\r\n\r\nconst BASE_URL = (process.env.NODE_ENV === 'production') ? '/api/' : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","\r\nconst initialState = {\r\n    filterBy: null,\r\n    isDark: false,\r\n    currentSurvey:null,\r\n    isTreePreviewShowen:false,\r\n    survey:{}\r\n}\r\n\r\nexport default function TreeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'UPDATE_SURVEY':\r\n            return {\r\n                ...state,\r\n                survey: action.survey\r\n            }\r\n        case 'QUERY_SURVEY':\r\n            return {\r\n                ...state,\r\n                survey: action.survey\r\n            }\r\n        case 'SET_CURRENT_SURVEY':\r\n            return {\r\n                ...state,\r\n                currentSurvey: action.survey\r\n            }\r\n        case 'TOGGLE_DARK':\r\n            console.log('toggle');\r\n            return {\r\n                ...state,\r\n                isDark: !state.isDark\r\n            }\r\n        case 'TOGGLE_IS_PREVIEW_TREE':\r\n            return {\r\n                ...state,\r\n                isTreePreviewShowen: !state.isTreePreviewShowen\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\nimport { httpService } from './httpService'\n\nexport const userService = {\n    login,\n    logout,\n    signup,\n    updateUser,\n    getLoggedinUser,\n    getOnlineUsers,\n    getUsers,\n    getById,\n    googleLogin\n}\n\nasync function login(credentials) {\n    try {\n        const user = await httpService.post('auth/login', credentials)\n        if (user) return _saveLocalUser(user)\n    } catch (err) {\n        throw err\n    }\n}\n\nasync function googleLogin(tokenId) {\n    try {\n        const user = await httpService.post('auth/googlelogin', { tokenId })\n        if (user) return _saveLocalUser(user)\n    } catch (err) {\n        throw err\n    }\n}\n\nasync function signup(userInfo) {\n    try {\n        const user = await httpService.post('auth/signup', userInfo)\n        return _saveLocalUser(user)\n    } catch (err) {\n        throw err\n    }\n}\n\nasync function logout(user) {\n    try {\n        sessionStorage.clear()\n        return await httpService.post('auth/logout', user)\n    } catch (err) {\n        throw err\n    }\n}\n\nasync function updateUser(user) {\n    try {\n        await httpService.put(`user/${user.id}`, user)\n    } catch (err) {\n        throw err\n    }\n}\n\nfunction _saveLocalUser(user) {\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\n    return user\n}\n\nfunction getLoggedinUser() {\n    let user = JSON.parse(sessionStorage.getItem('loggedinUser' || null));\n    return user\n}\n\nasync function getOnlineUsers() {\n    try {\n        const users = await getUsers()\n        const onlineUsers = users.reduce((acc, user) => {\n            if (user.isOnline) {\n                acc.push(user._id)\n            }\n            return acc\n        }, [])\n        return onlineUsers\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nasync function getUsers() {\n    try {\n        return await httpService.get(`user`)\n    } catch (err) {\n        throw err\n    }\n}\n\nasync function getById(userId) {\n    try {\n        return httpService.get(`user/${userId}`)\n    } catch (err) {\n        throw err\n    }\n}\n\n\n","import { userService } from '../services/userService'\n\nconst initialState = {\n    workspace: [],\n    // loggedInUser: userService.getLoggedinUser(),\n    loggedInUser: {\"username\":\"itairom2\"},\n    onlineUsers: [],\n    loginErr: null,\n    currPopover: {\n        elPos: null,\n        name: '',\n        props: null\n    },\n    isOverlayOpen: false,\n}\n\nexport function AppReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_USER':\n            return { ...state, loggedInUser: action.user, loginErr: null }\n        case 'SET_ONLINE_USERS':\n            return { ...state, onlineUsers: [...action.onlineUsers] }\n        case 'LOGIN_ERR':\n            return { ...state, loginErr: action.err }\n        case 'SET_POPOVER':\n            return { ...state, currPopover: { name: action.popoverName, elPos: action.elPos, props: action.props }, isOverlayOpen: true }\n        case 'CLOSE_POPOVER':\n            return { ...state, currPopover: { name: '', elPos: null, props: null }, isOverlayOpen: false }\n        default:\n            return state\n    }\n}","var _path, _path2;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgMenuBlack24Dp = function SvgMenuBlack24Dp(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0V0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMenuBlack24Dp, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/menu_black_24dp.8684d03d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { onLogout } from \"../actions/appActions\";\nimport { storageService } from \"../services/storageService\";\n\n\nexport function UserInfo() {\n\n    const [isShowUserInfo, setIsShowUserInfo] = useState(false)\n\n    const { loggedInUser, loginErr } = useSelector(state => state.appModule)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n    }, [loginErr])\n\n    const logout = () => {\n        storageService.saveToStorage('surveyId', null) // Reset current survey\n        dispatch(onLogout(loggedInUser))\n    }\n\n    return (\n        <div onClick={() => { setIsShowUserInfo(!isShowUserInfo) }} className=\"login-profile\">\n            {isShowUserInfo &&\n                <div className=\"user-dropdown\">\n                    <div className=\"dropdown-list\">\n                        <p>{loggedInUser?.username}</p>\n                        {(loggedInUser) &&\n                            <div className=\"\">\n                                {/* <Link to='/profile' >\n                                    <span>Profile</span>\n                                </Link> */}\n                            </div>\n                        }\n                        {(loggedInUser) &&\n                            <a href=\"\" onClick={() => logout()}>Logout</a>\n                        }\n                        {(!loggedInUser) && <Link to='/login' >\n                            <span>Login</span>\n                        </Link>}\n                    </div>\n                </div>}\n            <img className=\"profile-icon\" src=\"./imgs/header/user.svg\" alt=\"icon\" />\n        </div>\n        // <div className=\"user-info flex column grey\">\n        //     <p>{loggedInUser?.username}</p>\n        //     {!loggedInUser && <NavLink to=\"/login\">התחבר</NavLink>}\n        //     {loggedInUser && <button onClick={() => { logout() }}>Logout</button>}\n        // </div>\n    )\n}\n","import { userService } from '../services/userService.js'\n// import { socketService } from '../../services/socket.service.js'\n\nexport function onGoogleLogin(tokenId) {\n    return async dispatch => {\n        try {\n            const user = await userService.googleLogin(tokenId)\n            dispatch({ type: 'SET_USER', user })\n            // socketService.emit('user-watch', user._id)\n        } catch (err) {\n            console.log('UserActions: err in login', err)\n        }\n    }\n}\n\nexport function onLogin(credentials) {\n    \n    return async dispatch => {\n        try {\n            const user = await userService.login(credentials)\n            dispatch({ type: 'SET_USER', user })\n            // socketService.emit('user-watch', user._id)\n        } catch (error) {\n            console.log(error.response)\n            const { err } = error.response.data\n            dispatch({ type: 'LOGIN_ERR', err })\n        }\n    }\n}\n\nexport function onSignup(userInfo) {\n    return async dispatch => {\n        try {\n            const user = await userService.signup(userInfo)\n            dispatch({ type: 'SET_USER', user })\n        } catch (err) {\n            console.log('UserActions: err in signup', err)\n        }\n    }\n}\n\nexport function onLogout(user) {\n    return async dispatch => {\n        try {\n            // socketService.emit('user endSession', user._id)\n            await userService.logout(user)\n            // dispatch({ type: 'UPDATE_ONLINE_USERS', userId })\n            dispatch({ type: 'SET_USER', user: null })\n        } catch (err) {\n            console.log('UserActions: err in logout', err)\n        }\n    }\n}\n\nexport function openPopover(popoverName, elPos, props) {\n    return dispatch => {\n        const action = {\n            type: 'SET_POPOVER',\n            popoverName,\n            elPos,\n            props\n        }\n        dispatch(action)\n    }\n}\n\nexport function closePopover() {\n    return dispatch => {\n        const action = {\n            type: 'CLOSE_POPOVER',\n        }\n        dispatch(action)\n    }\n}\n\nexport function updateOnlineUsers(onlineUsers) {\n    return async dispatch => {\n        try {\n            dispatch({ type: 'SET_ONLINE_USERS', onlineUsers })\n        } catch (err) {\n            console.log('UserActions: err in login', err)\n        }\n    }\n}\n","import React, { useEffect, useState } from 'react'\r\nimport { useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { ReactComponent as Menu } from '../assets/svg/menu_black_24dp.svg'\r\nimport { storageService } from '../services/storageService'\r\nimport { UserInfo } from './UserInfo'\r\n\r\n\r\nexport function AppHeader() {\r\n    const [isMobile, setIsMobile] = useState(false)\r\n    // const [isShowUserInfo, setIsShowUserInfo] = useState(false)\r\n    const [localSurveyId, setLocalSurveyId] = useState(null)\r\n    const { currentSurvey, survey } = useSelector(state => state.TreeModule)\r\n    const { loggedInUser } = useSelector(state => state.appModule)\r\n    const headerRef = useRef()\r\n\r\n    useEffect(() => {\r\n        // window.addEventListener('scroll', handleScroll)\r\n        let storageId = storageService.loadFromStorage('surveyId')\r\n        if (storageId) {\r\n            setLocalSurveyId(storageId)\r\n        }\r\n\r\n        return () => {\r\n            // window.removeEventListener('scroll', handleScroll)\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (currentSurvey) {\r\n            setLocalSurveyId(currentSurvey)\r\n        }\r\n    }, [currentSurvey, survey])\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > 40) {\r\n            headerRef.current.className = 'main-nav fixed'\r\n        } else {\r\n            headerRef.current.className = 'main-nav'\r\n        }\r\n    }\r\n\r\n    const changeMobile = () => {\r\n        setIsMobile(prev => prev = !prev)\r\n    }\r\n\r\n    return (\r\n        <header className=\"app-header\">\r\n            <nav ref={headerRef} className=\"main-nav\">\r\n                {!isMobile && <div className=\"left-nav \">\r\n                     <p className=\"current-survey\"><span>סקר</span> {localSurveyId?.surveyTitle}</p>\r\n                    <Link to='/trees'><span>סקר סופי</span></Link>\r\n                    <Link to='/'><span>בחר סקר</span></Link>\r\n                    {localSurveyId && <Link to='/survey_editor'><span>הוספת עץ</span></Link>}\r\n                </div>}\r\n                {isMobile && <div onClick={changeMobile} className=\"mobile-nav\">\r\n                    <p>סקר <span>{localSurveyId?.surveyTitle}</span></p>\r\n                    <Link to='/trees'><span>סקר סופי</span></Link>\r\n                    <Link to='/'><span>בחר סקר</span></Link>\r\n                    {localSurveyId && <Link to='/survey_editor'><span>הוספת עץ</span></Link>}\r\n                </div>}\r\n                {isMobile && <div className=\"background-menu\" onClick={changeMobile}></div>}\r\n                <Menu onClick={changeMobile} className=\"menu-btn\" />\r\n                <div className=\"right-nav\">\r\n                    <UserInfo />\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\n\nexport const About = () => {\n\n    return (\n        <section className=\"main-container \">\n            <h1>About</h1>\n        </section>\n    )\n}","import React, { useCallback, useState } from 'react'\nimport { useFormCreateSurvey } from '../services/customHooks'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setCurrentSurvey } from '../actions/TreeActions'\nimport { storageService } from '../services/storageService';\nimport { updateSurvey } from '../actions/TreeActions';\n\n\nexport function CreateSurvey() {\n\n\n    const history = useHistory();\n    // const handleOnClick = useCallback(() => history.push('/survey_editor'), [history]);\n    const dispatch = useDispatch()\n    const { currentSurvey } = useSelector(state => state.TreeModule)\n    const { loggedInUser } = useSelector(state => state.appModule)\n\n    const [survey, setSurvey] = useState({\n        surveyInfo: {\n            surveyTitle: '',\n            surveyDate: '',\n            surveySummary: ''\n        },\n        surveyTrees: [],\n        surveyOwner: {}\n    })\n\n    const handleChange = ev => {\n        const { name } = ev.target\n        let value = (ev.target.type === 'number') ? +ev.target.value : ev.target.value\n        value = (ev.target.type === 'checkbox') ? ev.target.checked : value\n        setSurvey(\n            prevState => ({\n                ...prevState, surveyInfo: {\n                    ...prevState.surveyInfo, [name]: value\n                }\n            })\n        )\n    }\n\nconst onCreateSurvey = () => {\n    dispatch(updateSurvey(survey,loggedInUser))\n    // storageService.saveToStorage('survey',survey)\n    storageService.saveToStorage('surveyId',survey.surveyInfo)\n    history.push('./')\n}\n\n\n    return (\n        <section className=\"new-survey rtl\">\n\n            <form action=\"\">\n                <label htmlFor=\"surveyTitle\" onSubmit={(ev) => { ev.preventDefault() }}>\n                    כותרת סקר:\n                    <input\n                        id=\"surveyTitle\"\n                        name=\"surveyTitle\"\n                        type=\"text\"\n                        onChange={(ev) => { handleChange(ev) }}\n                        value={survey.surveyTitle} />\n                </label>\n                <label htmlFor=\"surveyTitle\">\n                    תאריך סקר:\n                    <input\n                        id=\"surveyDate\"\n                        name=\"surveyDate\"\n                        type=\"date\"\n                        placeholder=\"dd-mm-yyyy\"\n                        min=\"1997-01-01\"\n                        max=\"2030-12-31\"\n                        onChange={(ev) => { handleChange(ev) }}\n                        value={survey.surveyDate} />\n                </label>\n                {/* <div className=\"add-btn button\" onClick={() => { console.log('SURVEY', survey); }}>הוסף סקר</div> */}\n                <div className=\"add-btn button\" onClick={() => { onCreateSurvey() }}>הוסף סקר</div>\n\n                <Link to=\"/choose_survey\" >\n                    <div className=\"existing-survey\">חזרה</div>\n                </Link>\n\n            </form>\n        </section>\n\n    )\n}","import { useHistory } from 'react-router-dom'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { treeService } from '../services/treeService';\nimport { MenuItem, Select, FormControl, InputLabel } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentSurvey } from '../actions/TreeActions';\nimport { storageService } from '../services/storageService';\nimport { CreateSurvey } from '../pages/CreateSurvey';\n\n\n\nexport const ChooseSurvey = () => {\n\n    let [surveyIdList, setSurveyIdList] = useState([])\n    let [currentSurveyId, setCurrentSurveyId] = useState({})\n    const history = useHistory();\n    const handleOnClickNext = useCallback(() => history.push('/survey_editor'), [history]);\n    const handleOnClickBack = useCallback(() => history.push('/'), [history]);\n    const handleOnClickCreate = useCallback(() => history.push('/create_survey'), [history]);\n    // const { currentSurvey } = useSelector(state => state.TreeModule)\n    const { loggedInUser, loginErr } = useSelector(state => state.appModule)\n    let dispatch = useDispatch()\n\n\n    useEffect(() => {\n        (async () => {\n            if (loggedInUser) {\n                const resp = await treeService.querySurveyIdList(loggedInUser)\n                setSurveyIdList(resp)\n            }\n        })()\n    }, [])\n\n    useEffect(() => {\n        storageService.saveToStorage('surveyId',currentSurveyId)\n            dispatch(setCurrentSurvey(currentSurveyId))\n    }, [currentSurveyId])\n\n\n\n\n    return (\n        <section className=\"choose-section flex\">\n            {(surveyIdList.length !== 0) && <>\n                <h1>בחר סקר</h1>\n                <FormControl>\n                    <InputLabel required id=\"movingPossibility\">בחר</InputLabel>\n                    <Select\n                        required\n                        type=\"text\"\n                        id=\"currentTableId\"\n                        name=\"currentTableId\"\n                        variant=\"filled\"\n                        color=\"primary\"\n                        value={currentSurveyId}\n                        label=\"לחץ כאן\"\n                        placeholder=\"לחץ כאן\"\n                        onChange={(ev) => { setCurrentSurveyId(ev.target.value) }} >\n                        {\n                            surveyIdList?.map((survey) => (\n                                <MenuItem\n                                    key={survey.surveyTitle}\n                                    value={survey}>\n                                    {survey.surveyTitle}\n                                </MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n                <div className=\"next-btn button\"\n                    onClick={() => { handleOnClickNext() }} >\n                    <p>המשך</p>\n                </div>\n                <div className=\"back-btn button\"\n                    onClick={() => { handleOnClickBack() }} >\n                    <p>חזור</p>\n                </div>\n            </>}\n            {(surveyIdList.length === 0) && <>\n                <h1>הוסף סקר ראשון</h1>\n                <div className=\"next-btn button\"\n                    onClick={() => { handleOnClickCreate() }} >\n                    <p>הוסף סקר</p>\n                </div>\n                <CreateSurvey />\n            </>}\n        </section>\n    )\n}","import React, { useEffect, useRef, useState } from \"react\"\nimport { useParams, useHistory } from \"react-router\"\nimport { treeService } from \"../services/treeService\"\nimport { useForm, useHandleModal } from '../services/customHooks'\nimport { Button, MenuItem, Select, FormControl } from '@material-ui/core';\nimport { formService } from '../services/formService';\n// import { CloudinaryUpload } from './CloudinaryUpload';\nimport { useSelector } from 'react-redux';\nimport { FormAutocomplete } from '../cmps/FormAutocomplete';\nimport Input from '../cmps/form/input';\nimport { storageService } from '../services/storageService';\nimport FormModal from '../cmps/form/FormModal';\nimport { querySurvey } from \"../actions/TreeActions\";\nimport { useDispatch } from \"react-redux\";\nimport { updateSurvey } from \"../actions/TreeActions\"\n\nexport const TreeUpdate = () => {\n\n    const params = useParams()\n    let history = useHistory()\n\n    const { currentSurvey, survey } = useSelector(state => state.TreeModule)\n    const { loggedInUser } = useSelector(state => state.appModule)\n    const childRef = useRef();\n    const [tree, setTree] = useState({})\n    const [surveyId, setSurveyId] = useState('')\n    const [treeTypeOptions, setTreeTypeOptions] = useState([])\n    const [treeType, setType] = useState({})\n    const dispatch = useDispatch()\n    // const [imgUrl, setImgUrl] = useState('')\n\n    useEffect(() => {\n        query()\n    }, [])\n\n    useEffect(() => {\n        if (survey) onSetTree()\n    }, [survey])\n\n    const query = async () => {\n        const storageSurveyId = storageService.loadFromStorage('surveyId')\n        if (storageSurveyId) {\n            dispatch(querySurvey(storageSurveyId.surveyTitle, loggedInUser.username))\n        }\n    }\n\n    const onSetTree = () => {\n        console.log('EDIT', survey);\n        const findTree = survey.surveyTrees.find((tree) => {\n            return tree._id === params.treeId\n        })\n        setTree(findTree)\n    }\n\n    // useEffect(() => {\n    //     if (surveyId) {\n    //         if (Object.keys(surveyId).length === 0) {\n    //             let storageId = storageService.loadFromStorage('surveyId')\n    //             if (storageId) {\n    //                 setSurveyId(storageId)\n    //             }\n    //         }\n    //     }\n    // }, [surveyId])\n\n    useEffect(() => {\n        setTreeTypeOptions(formService.treeTypes)\n        setSurveyId(currentSurvey?.surveyTitle)\n        setInputRef()\n        setTextAreaRef()\n\n    }, [tree])\n\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('health' in fieldValues)\n            temp.health = isLessThenFiveInput(fieldValues.health) || isEmptyInput(fieldValues.health)\n        if ('canopy' in fieldValues)\n            temp.canopy = isLessThenFiveInput(fieldValues.canopy) || isEmptyInput(fieldValues.canopy)\n        if ('location' in fieldValues)\n            temp.location = isLessThenFiveInput(fieldValues.location) || isEmptyInput(fieldValues.location)\n        if ('mobile' in fieldValues)\n            temp.mobile = isLessThenFiveInput(fieldValues.mobile) || isEmptyInput(fieldValues.mobile)\n        if ('quantity' in fieldValues)\n            temp.quantity = isEmptyInput(fieldValues.quantity)\n        if ('idx' in fieldValues)\n            temp.idx = isEmptyInput(fieldValues.idx)\n        if ('diameter' in fieldValues)\n            temp.diameter = isEmptyInput(fieldValues.diameter)\n        if ('height' in fieldValues)\n            temp.height = isEmptyInput(fieldValues.height)\n        if ('rootsDiameter' in fieldValues)\n            temp.rootsDiameter = isEmptyInput(fieldValues.rootsDiameter)\n        if ('movingPossibility' in fieldValues)\n            temp.movingPossibility = isEmptyInput(fieldValues.movingPossibility)\n        if ('description' in fieldValues)\n            temp.description = isEmptyInput(fieldValues.description)\n        if ('movingReason' in fieldValues)\n            temp.movingReason = isEmptyInput(fieldValues.movingReason)\n        if ('recommendation' in fieldValues)\n            temp.recommendation = isEmptyInput(fieldValues.recommendation)\n\n        setErrors({\n            ...temp\n        })\n\n        if (tree === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    const isLessThenFiveInput = (field) => {\n        return (field <= 5 && field >= 0) ? \"\" : \"קלט צריך להיות בין 0 ל 5\"\n    }\n\n    const isEmptyInput = (field) => {\n        const length = (field + '').length\n        return (length > 0) ? \"\" : \"הכנס ערך\"\n    }\n\n    const {\n        values,\n        errors,\n        setErrors,\n        handleInputChange,\n    } = useForm(tree, true, validate);\n\n    const [isModalShown, HandleIsModalShown] = useHandleModal({\n        health: '',\n        location: '',\n        canopy: '',\n        isAddingTree: ''\n    })\n\n    const setInputRef = () => {\n        const inputsRef = document.querySelectorAll('input')\n        inputsRef.forEach(input => {\n            const name = input.name\n            input.value = (name === 'type') ? tree.type?.label : tree[name]\n        })\n    }\n    const setTextAreaRef = () => {\n        const textareasRef = document.querySelectorAll('textarea')\n        textareasRef.forEach(textarea => {\n            const name = textarea.name\n            textarea.value = tree[name]\n        })\n    }\n\n    // const onGetImgUrl = (img) => {\n    //     setImgUrl(img)\n    // }\n\n    const onSetTreeType = (treeTypeObj) => {\n        setType(treeTypeObj);\n    }\n\n    const setIsPalmTree = (ev) => {\n        handleInputChange(ev)\n        if (ev.target.checked) {\n            setTreeTypeOptions(formService.palmstreeTypes)\n        }\n        else {\n            setTreeTypeOptions(formService.treeTypes)\n        }\n    }\n\n    const onUpdateSurvey = (tree) => {\n        const copySurvey = { ...survey }\n        const treeIdx = copySurvey.surveyTrees.findIndex((tree) => tree._id === params.treeId)\n        copySurvey.surveyTrees.splice(treeIdx,1,tree)\n        dispatch(updateSurvey(copySurvey,loggedInUser))\n\n    }\n\n    const submitForm = (ev) => {\n        ev.preventDefault()\n        const mergeTree = { ...tree, type: treeType, ...values }\n        onUpdateSurvey(mergeTree)\n        history.goBack()\n    }\n\n    return (\n        <div className=\"main-container\">\n            <h1>עדכן עץ</h1>\n            <div className=\"form-container\">\n                <form dir=\"rtl\" action=\"#\" onSubmit={(ev) => submitForm(ev)}>\n                    <div className=\"trees-form flex column\">\n                        <div className=\"type-form \">\n                            <label htmlFor=\"isPalmTree rtl\">\n                                <input type=\"checkbox\" name=\"isPalmTree\" id=\"isPalmTree\" onChange={(ev) => { setIsPalmTree(ev) }} />\n                                עץ דקל\n                            </label>\n                            <FormAutocomplete ref={childRef} tree={tree.type} options={treeTypeOptions} onSetTreeType={onSetTreeType} />\n                        </div>\n                        <div className=\"input-container\">\n                            <p>מספר עץ</p>\n                            <Input\n                                error={errors.idx}\n                                name=\"idx\"\n                                value={values.idx}\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className=\"input-container\">\n                            <p>כמות עצים</p>\n                            <Input\n                                error={errors.quantity}\n                                value={values.quantity}\n                                name=\"quantity\"\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className=\"input-container\">\n                            <p>קוטר הגזע</p>\n                            <Input\n                                error={errors.diameter}\n                                value={values.diameter}\n                                placeholder=\"קוטר בס״מ של הגזע\"\n                                name=\"diameter\"\n                                variant=\"standard\"\n                                onChange={handleInputChange} />\n                        </div>\n\n                        <div className=\"input-container\">\n                            <p onClick={() => HandleIsModalShown('health', !isModalShown.health)} >*מצב בריאותי</p>\n                            <Input\n                                error={errors.health}\n                                value={values.health}\n                                InputProps={{\n                                    inputProps: {\n                                        max: 5,\n                                        min: 0\n                                    }\n                                }}\n                                placeholder=\"0-5\"\n                                id=\"health\"\n                                name=\"health\"\n                                variant=\"standard\"\n                                onChange={handleInputChange} />\n                            {isModalShown.health &&\n                                <FormModal\n                                    HandleiIsModalShown={HandleIsModalShown}\n                                    modal={{\n                                        type: 'health',\n                                        isShowen: isModalShown.health\n                                    }}\n                                    imgSrc=\"/imgs/modal/healthModal.png\" />}\n                        </div>\n                        <div className=\"input-container\">\n                            <p>גובה העץ</p>\n                            <Input\n                                error={errors.height}\n                                name=\"height\"\n                                variant=\"standard\"\n                                placeholder=\"גובה העץ במטרים\"\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className=\"input-container\">\n                            <p onClick={() => HandleIsModalShown('location', !isModalShown.location)} > *מיקום העץ</p>\n\n                            <Input\n                                error={errors.location}\n                                placeholder=\"0-5\"\n                                InputProps={{\n                                    inputProps: {\n                                        max: 5,\n                                        min: 0\n                                    }\n                                }}\n                                id=\"location\"\n                                name=\"location\"\n                                onChange={handleInputChange} />\n\n                            {isModalShown.location &&\n                                <FormModal\n                                    HandleiIsModalShown={HandleIsModalShown}\n                                    modal={{\n                                        type: 'location',\n                                        isShowen: isModalShown.location\n                                    }}\n                                    imgSrc=\"/imgs/modal/locationModal.png\" />}\n                        </div>\n                        <div className=\"input-container\">\n                            <p onClick={() => HandleIsModalShown('canopy', !isModalShown.canopy)} >*ניקוד חופת העץ</p>\n                            <Input\n                                error={errors.canopy}\n                                placeholder=\"0-5\"\n                                InputProps={{\n                                    inputProps: {\n                                        max: 5,\n                                        min: 0\n                                    }\n                                }}\n                                id=\"canopy\"\n                                name=\"canopy\"\n                                onChange={handleInputChange} />\n                            {isModalShown.canopy &&\n                                <FormModal\n                                    HandleiIsModalShown={HandleIsModalShown}\n                                    modal={{\n                                        type: 'canopy',\n                                        isShowen: isModalShown.canopy\n                                    }}\n                                    imgSrc=\"/imgs/modal/canopyModal.png\" />}\n                        </div>\n                        <div className=\"input-container\">\n                            <p>אזור שורשים מוגן</p>\n                            <Input\n                                error={errors.rootsDiameter}\n                                placeholder=\"אזור שורשים מוגן במטרים\"\n                                id=\"rootsDiameter\"\n                                name=\"rootsDiameter\"\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className=\"input-container\">\n                            <p>היתכנות העתקה</p>\n                            <FormControl\n                                className=\"update-select\"\n                            >\n                                <Select\n                                    // error={errors.movingPossibility}\n                                    type=\"text\"\n                                    id=\"movingPossibility\"\n                                    name=\"movingPossibility\"\n                                    value={values.movingPossibility}\n\n                                    onChange={handleInputChange}>\n                                    {formService.movingPossibility.map((option) => (\n                                        <MenuItem\n\n                                            key={option.label}\n                                            value={option.label}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div className=\"input-container\">\n                            <p>המלצה</p>\n                            <FormControl\n                                className=\"update-select\"\n                            >\n                                <Select\n                                    // error={errors.recommendation}\n                                    type=\"text\"\n                                    id=\"recommendation\"\n                                    name=\"recommendation\"\n                                    value={values.recommendation}\n                                    onChange={handleInputChange}>\n                                    {formService.recomandationOptions.map((option) => (\n                                        <MenuItem\n                                            key={option.label}\n                                            value={option.label}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div className=\"input-container\">\n                            <p>סיבת כריתה או\n                                העתקת\n                                העץ</p>\n                            <Input\n                                error={errors.movingReason}\n                                multiline\n                                rows={2}\n                                type=\"text\"\n                                id=\"movingReason\"\n                                name=\"movingReason\"\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className=\"input-container\">\n                            <p>הערות</p>\n                            <Input\n                                error={errors.description}\n                                multiline\n                                rows={2}\n                                type=\"text\"\n                                id=\"description\"\n                                name=\"description\"\n                                onChange={handleInputChange} />\n                        </div>\n                    </div>\n                    {/* <CloudinaryUpload onGetImgUrl={onGetImgUrl} /> */}\n                    <Button style={{ marginBottom: '20px' }} onClick={(ev) => submitForm(ev)} color=\"primary\" variant=\"outlined\">עדכן עץ</Button>\n                    {isModalShown.isAddingTree &&\n                        <div\n                            onClick={() => { HandleIsModalShown(!isModalShown.health) }}\n                            className=\"adding-modal\">\n                            <div className=\"background\"></div>\n                            <h1>העץ נוסף בהצלחה!</h1>\n                        </div>}\n                </form>\n            </div>\n        </div>\n    )\n\n}","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n\nexport function Home() {\n    const { loggedInUser, loginErr } = useSelector(state => state.appModule)\n    const history = useHistory()\n\n    useEffect(() => {\n        // console.log(loggedInUser);\n        // if (!loggedInUser) history.push('/login')\n    }, [])\n\n    return (\n        <section className=\"home-container flex \">\n            {/* <></> */}\n            <Link to=\"/create_survey\" >\n                <div className=\"new-survey\">סקר חדש</div>\n            </Link>\n\n            <Link to=\"/choose_survey\" >\n                <div className=\"existing-survey\">בחר סקר</div>\n            </Link>\n        </section>\n\n    )\n}","var _circle, _circle2, _circle3, _circle4, _circle5, _circle6, _circle7, _circle8, _circle9;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgGrid = function SvgGrid(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 105,\n    height: 105,\n    viewBox: \"0 0 105 105\",\n    fill: \"#fff\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12.5,\n    cy: 12.5,\n    r: 12.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"0s\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12.5,\n    cy: 52.5,\n    r: 12.5,\n    fillOpacity: 0.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"100ms\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 52.5,\n    cy: 12.5,\n    r: 12.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"300ms\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 52.5,\n    cy: 52.5,\n    r: 12.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"600ms\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 92.5,\n    cy: 12.5,\n    r: 12.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"800ms\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 92.5,\n    cy: 52.5,\n    r: 12.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"400ms\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12.5,\n    cy: 92.5,\n    r: 12.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"700ms\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 52.5,\n    cy: 92.5,\n    r: 12.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"500ms\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 92.5,\n    cy: 92.5,\n    r: 12.5\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    begin: \"200ms\",\n    dur: \"1s\",\n    values: \"1;.2;1\",\n    calcMode: \"linear\",\n    repeatCount: \"indefinite\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGrid, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/grid.272baf8c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\n// import { GoogleLogin } from 'react-google-login'\nimport { useDispatch } from 'react-redux';\nimport { onLogin } from '../actions/appActions'\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { storageService } from '../services/storageService';\n\n\nexport function Login() {\n\n  const { loginErr } = useSelector(state => state.appModule)\n  const history = useHistory()\n  // const location = useLocation()\n  const dispatch = useDispatch()\n\n  const credentials = {\n    username: '',\n    password: ''\n  }\n\n  useEffect(() => {\n    console.log('loginErr', loginErr);\n  }, [loginErr])\n\n  const onSubmit = (values) => {\n    const storageLocalUser = {}\n    storageLocalUser.username = values.username\n    storageService.saveToStorage('surveyId', null) // Reset current survey\n    storageService.saveToStorage('loggedinUser', storageLocalUser) // Reset current survey\n    dispatch(onLogin(values))\n    history.push('/')\n  }\n\n  const validate = Yup.object({\n    username: Yup.string()\n      .min(4, 'Must be 4 or more')\n      .max(15, 'Must be 15 characters or less')\n      .required('Required'),\n    password: Yup.string()\n      .min(6, 'Must be 6 or more')\n      .max(20, 'Must be 20 characters or less')\n      .required('Required')\n  })\n\n  // const onSuccessGoogle = (res) => {\n  //   const { tokenId } = res\n  //   // const { onGoogleLogin } = this.props\n  //   onGoogleLogin(tokenId)\n  // }\n  // const onFailureGoogle = (res) => {\n  //   console.log('Login with google failed', res)\n  // }\n\n  return (\n    <section className=\"login-signup-container\">\n      <div className=\"login-signup \">\n        <Formik\n          initialValues={credentials}\n          validationSchema={validate}\n          onSubmit={(values) => {\n            onSubmit(values)\n          }} >\n          <Form className=\"flex column\">\n            <ErrorMessage name=\"username\" component=\"div\" />\n            <Field type=\"username\" placeholder=\"Enter username\" name=\"username\" autoFocus />\n            <ErrorMessage name=\"password\" component=\"div\" />\n            <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" />\n            <button type=\"submit\" className=\"primary-btn login-signup-btn\">Log in</button>\n            {loginErr && <div className=\"err-msg\">שם משתמש או סיסמא לא נכונים</div>}\n          </Form>\n        </Formik>\n        <hr />\n        <Link to=\"/signup\">? עדיין לא רשום</Link>\n      </div>\n    </section>\n  )\n\n}\n\n","import React from 'react';\n// import { useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\n// import { GoogleLogin } from 'react-google-login'\nimport { useDispatch } from 'react-redux';\nimport {  onSignup, } from '../actions/appActions'\nimport * as Yup from 'yup';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\n\n\nexport function Signup() {\n\n    // const { loggedInUser } = useSelector(state => state.appModule)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const userInfo = {\n        fullname: '',\n        username: '',\n        password: '',\n        imgUrl: ''\n    }\n    const validate = Yup.object({\n        fullname: Yup.string()\n            .min(4, 'Must be 4 or more')\n            .max(15, 'Must be 15 characters or less')\n            .required('Required'),\n        username: Yup.string()\n            .min(4, 'Must be 4 or more')\n            .max(15, 'Must be 15 characters or less')\n            .required('Required'),\n        password: Yup.string()\n            .min(6, 'Must be 6 or more')\n            .max(20, 'Must be 20 characters or less')\n            .required('Required')\n    })\n\n    // const onSuccessGoogle = (res) => {\n    //     const { tokenId } = res\n    //     // const { onGoogleLogin } = this.props\n    //     onGoogleLogin(tokenId)\n    // }\n\n    // const onFailureGoogle = (res) => {\n    //     console.log('Login with google failed', res)\n    // }\n\n    const onSubmit = (values) => {\n        dispatch(onSignup(values))\n        history.push('/')\n    }\n\n\n    return (\n        <section className=\"login-signup-container\">\n            <div className=\"login-signup \">\n                <Formik\n                    initialValues={userInfo}\n                    validationSchema={validate}\n                    onSubmit={(values) => {\n                        onSubmit(values)\n                    }} >\n                    <Form className=\"flex column\">\n                        <div className=\"flex\">\n                            <Field type=\"fullname\" placeholder=\"Enter fullname\" name=\"fullname\" autoFocus />\n                            <ErrorMessage name=\"fullname\" component=\"p\" />\n                        </div>\n                        <div className=\"flex\">\n                            <Field type=\"username\" placeholder=\"Enter username\" name=\"username\" autoFocus />\n                            <ErrorMessage name=\"username\" component=\"p\" />\n                        </div>\n                        <div className=\"flex\">\n                            <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" />\n                            <ErrorMessage name=\"password\" component=\"p\" />\n                        </div>\n                        <button type=\"submit\" className=\"primary-btn login-signup-btn\">Signup</button>\n                    </Form>\n                </Formik>\n                <hr />\n                <Link to=\"/login\">? משתמש רשום</Link>\n            </div>\n        </section>\n    )\n\n}\n\n","import React, { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppHeader } from './cmps/AppHeader'\nimport './assets/main.css'\nimport './assets/style/main.scss'\nimport { About } from './pages/About';\nimport { ChooseSurvey } from './pages/ChooseSurvey';\nimport { CreateSurvey } from './pages/CreateSurvey';\n// import { FinalSurvey } from './pages/FinalSurvey';\n// import { SurveyEditor } from './pages/SurveyEditor';\nimport { TreeUpdate } from './pages/TreeUpdate';\nimport { Home } from './pages/Home';\nimport { Login } from './cmps/Login';\nimport { Signup } from './cmps/Signup';\nimport { ReactComponent as Loader } from './assets/svg/grid.svg';\n\nconst SurveyEditor = lazy(() => import('./pages/SurveyEditor'));\nconst FinalSurvey = lazy(() => import('./pages/FinalSurvey'));\n\n\n\nfunction App() {\n  return (\n    <div id=\"swup\" className=\"transition content-wrapper\">\n      <AppHeader />\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/trees\" component={FinalSurvey} />\n          <Route path=\"/tree_update/:treeId\" component={TreeUpdate} />\n          <Route path=\"/survey_editor\" component={SurveyEditor} />\n          <Route path=\"/choose_survey\" component={ChooseSurvey} />\n          <Route path=\"/create_survey\" component={CreateSurvey} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport TreeReducer from './reducers/TreeReducer';\r\nimport  { AppReducer } from './reducers/AppReducer';\r\nimport App from './App';\r\n\r\nconst rootReducer = combineReducers({\r\n    TreeModule: TreeReducer,\r\n    appModule: AppReducer,\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\nserviceWorker.register();\r\n\r\n","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, value, error = null, onChange, InputProps, id, multiline, rows, placeholder, type } = props;\n    return (\n        <TextField\n            autoComplete=\"off\"\n            variant=\"standard\"\n            name={name}\n            // value={value}\n            onChange={onChange}\n            InputProps={InputProps}\n            id={id}\n            color=\"primary\"\n            {...(type && { type: \"text\" })}\n            {...(!type && { type: \"number\" })}\n            {...(error && { error: true, helperText: error })}\n            {...multiline &&\n            {\n                rows: rows,\n                multiline\n            }}\n            // {...placeholder && { placeholder: placeholder }}\n            placeholder={placeholder}\n        />\n    )\n}","import { treeService } from \"../services/treeService\";\r\n\r\n// Dispatchers\r\nconst _setFilter = (filterBy) => ({ type: 'SET_FILTER', filterBy });\r\nconst _toggleDark = () => ({ type: 'TOGGLE_DARK' });\r\nconst _toggleIsTreePreviewShowen = () => ({ type: 'TOGGLE_IS_PREVIEW_TREE' });\r\nconst _setCurrentSurvey = (survey) => ({ type: 'SET_CURRENT_SURVEY', survey });\r\nconst _updateSurvey = (survey) => ({ type: 'UPDATE_SURVEY', survey });\r\nconst _querySurvey = (survey) => ({ type: 'QUERY_SURVEY', survey });\r\n\r\n// THUNK\r\n\r\nexport function setFilter(filterBy) {\r\n    return async (dispatch) => dispatch(_setFilter(filterBy))\r\n}\r\nexport function setCurrentSurvey(survey) {\r\n    return async (dispatch) => dispatch(_setCurrentSurvey(survey))\r\n}\r\nexport function toggleDark() {\r\n    return (dispatch) => dispatch(_toggleDark())\r\n}\r\nexport function toggleIsTreePreviewShowen() {\r\n    return (dispatch) => dispatch(_toggleIsTreePreviewShowen())\r\n}\r\nexport function updateSurvey(survey, user) {\r\n    return async (dispatch) => {\r\n        treeService.save(survey, user)\r\n        dispatch(_updateSurvey(survey))\r\n    }\r\n}\r\nexport function querySurvey(surveyName, user) {\r\n    return async (dispatch) => {\r\n        const survey = await treeService.querySurvey(surveyName, user)\r\n        dispatch(_querySurvey(survey))\r\n    }\r\n}\r\n\r\n// export function saveCar(car) {\r\n//     return async (dispatch, getState) => {\r\n//         const type = car._id ? 'UPDATE_CAR' : 'ADD_CAR';\r\n//         const savedCar = await carService.save(car)\r\n//         dispatch({ type, car: savedCar })\r\n//     }\r\n// }\r\n","import { httpService } from \"./httpService\"\n\n\n// async function save(tree, user) {\n//     await httpService.put(`tree/save`, [tree, user])\n//         .then((res) => {\n//             console.log(res);\n//         })\n// }\n\n\nasync function save(survey, user) {\n    if (survey._id) {\n        try {\n            return await httpService.put(`tree/save/${survey._id}`, [survey, user])\n        } catch (err) {\n            throw err\n        }\n    } else {\n        try {\n            await httpService.post(`tree/save`, [survey, user])\n        } catch (err) {\n            throw err\n        }\n    }\n}\nasync function querySurvey(survyName, username) {\n    let survey = await httpService.get(`tree/`, [survyName, username])\n    return survey\n}\n\n\n\n// async function queryTrees(tableId, username) {\n//     let trees = await httpService.get(`tree/`, [tableId, username])\n//     return trees\n// }\nasync function getTreeById(treeId, username) {\n    let tree = await httpService.get(`tree/${treeId}&${username}`)\n    return tree\n}\nasync function removeTree(treeId, username) {\n    let removedTree = await httpService.delete(`tree/${treeId}&${username}`)\n    return removedTree\n}\n\nasync function querySurveyIdList(loggedInUser) {\n    let idList = await httpService.get(`tree/survey_id_list`, loggedInUser)\n    return idList\n}\nasync function querySurveyTrees(surveyId, username) {\n    let trees = await httpService.get(`tree/survey_trees`, [surveyId, username])\n    return trees\n}\n\n// async function update(pet) {\n//     let updatedPet = await httpService.put(`pet/${pet._id}`, pet)\n//     return updatedPet\n// }\n\nconst finalSurveyNote = () => {\n    return (\n        `<div>\n1 סקר זה הינו סקר נופי אגרונומי ואינו סקר הערכת סיכונים/סקר בטיחות.\n . 2 אין לבצע את כריתת/העתקת העצים המומלצים אלא לאחר קבלת רישיון כריתה כחוק - מפקיד היערות העירוני.\n . 3 כל פעולה העלולה לגרום מוות לעץ (כולל פגיעה/חיתוך שורשיו) – נחשבת עפ\"י החוק ככריתה ללא היתר.\n . 4 עץ המוגדר לשימור – אין לבצע עבודות גיזום נוף/גיזום שורשים - ללא תאום עם הח\"מ.\n . 5 עץ המוגדר לשימור – אין לבצע עבודות חפירה ו/או מילוי במרחק הקטן מ 3 - מ' מקצה גזע העץ – ללא תאום עם הח\"מ.\n . 6 תוקף הסקר 6 חודשים מביצוע הסק הרי בשטח.\n . 7 עצים המאושרים לכריתה, יינטעו תמורתם עצים באותו הערך – כפיצוי נופי.\n . 8 מספר העצים בהתאם לתכנית הסקר , יבוצע מייד עם הכניסה לביצוע העבודות באתר – הסימון יאושר ע\"י המפקח והאגרונום.\n . 9 כל העצים יסומנו ויוגנו בהתאם לפרט בגוף התכנית , טרם תחילת העבודות באתר.\n .10 להלן תמונות העצים.\n .11 מצ\"ב מפת הסקר כולל סימון העצים ומספורם.\n</div>`\n    )\n}\n\n\n\nexport const treeService = {\n    save,\n    querySurveyIdList,\n    querySurveyTrees,\n    removeTree,\n    getTreeById,\n    finalSurveyNote,\n    querySurvey\n}","import treeTypes from '../data/treeTypes.json';\nimport palmstreeTypes from '../data/palmstreeTypes.json';\n\n//  const treeTypes = [\n//     {\n//         typeValue: \"3\",\n//         BinomialNomenclature: \" Persea americana\",\n//         label: \"אבוקדו אמריקני (זנים שונים)\"\n//     },\n//     {\n//         typeValue: \"3\",\n//         BinomialNomenclature: \"Juglans regia \",\n//         label: \"אגוז המלך \"\n//     }\n// ]\n\n\nconst movingPossibilityOptions = [\n    {\n        value: 'hign',\n        label: 'גבוהה',\n    },\n    {\n        value: 'medium',\n        label: 'בינונית',\n    },\n    {\n        value: 'low',\n        label: 'נמוכה',\n\n    }\n    ,\n    {\n        value: 'notPossible',\n        label: 'לא ניתן',\n\n    }\n];\nconst recommendationOptions = [\n    {\n        value: 'preserve',\n        label: 'שימור',\n    },\n    {\n        value: 'relocation',\n        label: 'העתקה',\n    },\n    {\n        value: 'amputation',\n        label: 'כריתה',\n    },\n    {\n        value: 'notDefined',\n        label: 'אינו מוגדר עץ בוגר',\n    }\n\n];\n\nexport const formService = {\n    movingPossibility: movingPossibilityOptions,\n    treeTypes,\n    palmstreeTypes,\n    recomandationOptions: recommendationOptions\n}\n","import { useEffect, useState } from 'react'\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n  const [values, setValues] = useState(initialFValues);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = ev => {\r\n    const { name } = ev.target\r\n    let value = (ev.target.type === 'number') ? +ev.target.value : ev.target.value\r\n    value = (ev.target.type === 'checkbox') ? ev.target.checked : value\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    })\r\n    if (validateOnChange)\r\n      validate({ [name]: value })\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setValues(initialFValues);\r\n    setErrors({})\r\n  }\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  }\r\n}\r\n\r\nexport const useFormCreateSurvey = (initialState, cb = () => { }) => {\r\n  const [fields, setFields] = useState(initialState)\r\n  // const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    cb(fields)\r\n\r\n  }, [fields,cb])\r\n\r\n  return [\r\n\r\n    fields,\r\n    function (ev) {\r\n\r\n      const field = ev.target.name\r\n      let value = (ev.target.type === 'number') ? +ev.target.value : ev.target.value\r\n      value = (ev.target.type === 'checkbox') ? ev.target.checked : value\r\n      setFields(prevFields => ({ ...prevFields, [field]: value }))\r\n    },\r\n    setFields\r\n  ]\r\n}\r\n\r\nexport const useError = (initialState, cb = () => { }) => {\r\n  const [fields, setFields] = useState(initialState)\r\n\r\n  useEffect(() => {\r\n    cb(fields)\r\n  }, [fields,cb])\r\n\r\n  return [\r\n    fields,\r\n    function (ev) {\r\n      setFields(prevFields => ({ ...prevFields, [field]: '' }))\r\n      const field = ev.target.name\r\n      let value = (ev.target.type === 'number') ? +ev.target.value : ev.target.value\r\n      if (value > 5 || value < 0) {\r\n        setFields(prevFields => ({ ...prevFields, [field]: value }))\r\n      }\r\n    },\r\n    setFields\r\n  ]\r\n}\r\n\r\nexport const useHandleModal = (initialState, cb = () => { }) => {\r\n  const [fields, setFields] = useState(initialState)\r\n\r\n  useEffect(() => {\r\n    cb(fields)\r\n  }, [fields,cb])\r\n\r\n  return [\r\n    fields,\r\n    function (field, value) {\r\n      setFields(prevFields => ({ ...prevFields, [field]: value }))\r\n    },\r\n    setFields\r\n  ]\r\n}\r\n\r\n\r\nexport const useGeolocation = () => {\r\n\r\n  const [location, setLocation] = useState({\r\n    isReady: false,\r\n    coordinates: {\r\n      lng: '', lat: ''\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    \r\n    navigator.geolocation.getCurrentPosition(onSucsess, onError)\r\n  }, [])\r\n\r\n  const onSucsess = (position) => {\r\n    setLocation({\r\n      isReady: true,\r\n      coordinates: {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude\r\n      }\r\n    })\r\n  }\r\n\r\n  const onError = (err) => {\r\n    setLocation({\r\n      isReady: true,\r\n      err\r\n    })\r\n\r\n  };\r\n\r\n  return location\r\n}\r\n\r\nexport default function useWindowSize() {\r\n  const isClient = typeof window === 'object';\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize;\r\n}","import React from 'react'\n\nexport default function FormModal({ HandleiIsModalShown, modal, imgSrc }) {\n    return (\n        <div\n            onClick={() => HandleiIsModalShown(modal.type, !modal.isShowen)}\n            className=\"form-modal health-modal\" >\n            <div className=\"modal-container \">\n                <img src={imgSrc} alt=\"מקרא\" />\n            </div>\n        </div>\n    )\n}"],"sourceRoot":""}